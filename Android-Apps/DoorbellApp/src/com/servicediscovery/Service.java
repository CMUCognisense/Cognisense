/**
 * A service has 2 things. Actions it can perform and triggers it can generate.
 * Actions behavior is specified and known to all other services. 
 * While what the service will do on getting a trigger is totally up to the implementation o
 * of the service. The configuration services listen on triggers that other service generate. 
 * They tell other service to perform actions. The behavior of these actions that it tells
 * other service to perform is specified before hand and know to everybody. 
 * Trigger generated is the list of triggers that are generated by the service. 
 * Other services who care about these trigger can register listeners on these triggers. 
 * which is stored in  Set<Trigger> triggers. 
 */

package com.servicediscovery;

import java.io.Serializable;
import java.util.List;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import android.content.Intent;


public class Service implements Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String serviceid;
	private String serviceType;
	private Set<Action> actions;
	private Set<Trigger> triggers;
	private List<String> tiggersGenerated;
	// property name and the property object
	private Map<String,Property> properties;


	public Service() {
		actions = new HashSet<Action>();
		triggers = new HashSet<Trigger>();
		setProperties(new HashMap<String, Property>());
	}

	public String getServiceid() {
		return serviceid;
	}
	public void setServiceid(String serviceid) {
		this.serviceid = serviceid;
	}
	public String getServiceType() {
		return serviceType;
	}
	public void setServiceType(String serviceType) {
		this.serviceType = serviceType;
	}
	public Set<Action> getActions() {
		return actions;
	}
	public void setActions(Set<Action> actions) {
		this.actions = actions;
	}
	public Set<Trigger> getTrigger() {
		return triggers;
	}
	public void setTrigger(Set<Trigger> trigger) {
		this.triggers = trigger;
	}

	public void addAction(Action action) {
		actions.add(action);
	}

	public Map<String,Property> getProperties() {
		return properties;
	}

	public void setProperties(Map<String,Property> properties) {
		this.properties = properties;
	}

	public void addProperties(Property property) {
		properties.put(property.name, property);
	}

	public void addTrigger(Trigger trigger) {
		triggers.add(trigger);
	}
}